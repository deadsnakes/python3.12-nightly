Implement :pep:`695`, adding syntactic support for generic classes, generic
functions, and type aliases.

A new ``type X = ...`` syntax is added for type aliases, which resolves at
runtime to an instance of the new class ``typing.TypeAliasType``.
The value is lazily evaluated and is accessible through the ``.__value__``
attribute. This is implemented as a new AST node ``ast.TypeAlias``.

New syntax (``class X[T]: ...``, ``def func[T](): ...``) is added for defining
generic functions and classes. This is implemented as a new
``typeparams`` attribute on the AST nodes for classes and functions.
This node holds instances of the new AST classes ``ast.TypeVar``,
``ast.ParamSpec``, and ``ast.TypeVarTuple``.

``typing.TypeVar``, ``typing.ParamSpec``, ``typing.ParamSpecArgs``,
``typing.ParamSpecKwargs``, ``typing.TypeVarTuple``, and
``typing.Generic`` are now implemented in C rather than Python.

There are new bytecode instructions ``LOAD_LOCALS``,
``LOAD_CLASSDICT_OR_GLOBAL``, and ``LOAD_CLASSDICT_OR_DEREF``
to support correct resolution of names in class namespaces.

Patch by Eric Traut, Larry Hastings, and Jelle Zijlstra.
